First .. in Sourcetree reset the head forced to the right commit
git reset --hard <sha1-commit-id>
git push origin HEAD --force

Global settings for line endings

The git config core.autocrlf command is used to change how Git handles line endings. It takes a single argument.

On Windows, you simply pass true to the configuration. For example:

git config --global core.autocrlf true
# Configure Git on Windows to properly handle line endings
You can also provide a special --global flag, which makes Git use the same settings for line endings across every local Git repository on your computer.



$ git checkout --orphan NEWBRANCH
--orphan creates a new branch, but it starts without any commit. After running the above command you are on a new branch "NEWBRANCH", and the first commit you create from this state will start a new history without any ancestry.

The --orphan command keeps the index and the working tree files intact in order to make it convenient for creating a new history whose trees resemble the ones from the original branch.

Since you want to create a new empty branch that has nothing to do with the original branch, you can delete all files in the new working directory:

$ git rm -rf .

Now you can start adding files and commit them and they will live in their own branch. If you take a look at the log, you will see that it is isolated from the original log.

Using the checkout command you can switch back and forth between the different branches like this:

$ git checkout master (back at the master branch)

$ git checkout NEWBRANCH (back at the new isolated branch)